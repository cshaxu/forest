/*
 * This file was generated by the Gradle 'init' task.
 */

import java.awt.Desktop

plugins {
    // Apply the java Plugin to add support for Java.
    id 'java'
    id 'jacoco'
    id 'com.diffplug.spotless'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    constraints {
        // Define dependency versions as constraints
        implementation 'org.apache.commons:commons-text:1.10.0'
    }

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Use JUnit Platform for unit tests.
test.useJUnitPlatform()
// spotlessApply is required to run before tests
test.dependsOn(spotlessApply)
// report is always generated after tests run
test.finalizedBy(jacocoTestReport)

// open JaCoCo test reports automatically
task openJacocoTestReport(dependsOn: 'jacocoTestReport') {
    doLast {
        def jacocoTestReportFile =
            file('build/reports/jacoco/test/html/index.html');
        if (!jacocoTestReportFile.exists()) {
            println 'JaCoCo test report file not found'
            return
        }
        // Open the report file in the default web browser
        if (Desktop.isDesktopSupported()) {
            Desktop.desktop.browse jacocoTestReportFile.toURI()
        } else {
            println 'Opening web browser not supported'
        }
    }
}

// tests are required to run before generating the report
jacocoTestReport.dependsOn(test)
// open report after jacocoTestReport
jacocoTestReport.finalizedBy(openJacocoTestReport)

ext {
    jacocoClassPathsToExclude = []
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: project.ext.jacocoClassPathsToExclude)
        }))
    }
}

spotless {
    java {
        clearSteps()
        enforceCheck = true
        target 'src/**/*.java'
        googleJavaFormat('1.17.0')
    }
}
